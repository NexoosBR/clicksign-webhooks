exit
Rails.logger.warna("a")
Rails.logger.warn("a")
NoMethodError
NoMethodErrorr
      end
        Clicksign::Webhooks.send(event_callback).call(event_params)
if Clicksign::Webhooks.respond_to?(event_callback)
Clicksign::Webhooks.send(event_callback).is_a?(Proc)
Clicksign::Webhooks.send(event_callback).is_a?(lambda)
Clicksign::Webhooks.send(event_callback).is_a?(Lambda)
Clicksign::Webhooks.send(event_callback)
event_callback = 'on_upload'
Clicksign::Webhooks.send(event_callback).present?
Clicksign::Webhooks.respond_to?(event_callback)
Clicksign::Webhooks.respond_to(event_callback)
event_callback = 'on_add_signer'
event_callback
Clicksign::Webhooks.send(event_callback).present?
Clicksign::Webhooks.on_add_signer.nil?
Clicksign::Webhooks.on_add_signer
Clicksign::Webhooks.add_signer
Clicksign::Webhooks.send(event_callback).call(event_params)
event_callback = "on_upload"
event_callback
Clicksign::Webhooks.send(event_callback).call(event_params)
event_callback = "on_#{event_params[:name]}"
event_name = "on_#{event_params[:name]}"
event_params[:name]
event_params
Clicksign::Webhooks.on_upload.call(event_params)
Clicksign::Webhooks.on_upload
      end
        puts "1"
Clicksign::Webhooks.on_upload(event_params) do
Clicksign::Webhooks.on_upload(event_params)
event_params = params.require(:event).permit!
    end
      params.require(:event).permit!
def event_params
    end
      params.require(:event).permit!
params.require(:event).permit!def event_params
params.require(:event).permit!
params.require(:event)
params
